import type { Metadata } from "next";
import { Roboto, Space_Grotesk } from "next/font/google";
import "./globals.css";
import { ChildProps } from "@/types";
import { ThemeProvider } from "@/components/provider/theme-provider";
import { languages } from "@/i18n/settings";
import { dir } from "i18next";
import ClerkAppearanceWrapper from "@/components/provider/ClerkAppearanceWrapper";

const roboto = Roboto({
  variable: "--font-roboto",
  subsets: ["latin"],
});

const spaceGrotesk = Space_Grotesk({
  variable: "--font-spaceGrotesk",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export async function generateStaticParams() {
  return languages.map((lng) => ({ lng }));
}

interface Props extends ChildProps {
  params: { lng: string };
}
export default function RootLayout({ children, params: { lng } }: Props) {
  return (
    <html lang="en" dir={dir(lng)} suppressHydrationWarning>
      <body
        className={`${roboto.variable} ${spaceGrotesk.variable} antialiased`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <ClerkAppearanceWrapper>{children}</ClerkAppearanceWrapper>
        </ThemeProvider>
      </body>
    </html>
  );
}
